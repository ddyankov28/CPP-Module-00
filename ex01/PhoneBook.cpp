/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   PhoneBook.cpp                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ddyankov <ddyankov@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/08/11 17:17:34 by ddyankov          #+#    #+#             */
/*   Updated: 2023/09/12 13:50:12 by ddyankov         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "PhoneBook.hpp"

PhoneBook::PhoneBook()
{
    std::cout << "\t     ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è                                                      ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è\t    üìñ ùòø ùôÄ ùôî ùòº ùôâ ' ùôé   ùôã ùôÉ ùôä ùôâ ùôÄ ùòΩ ùôä ùôä ùôÜ ‚Ñ¢Ô∏è ¬ÆÔ∏è  üìñ     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è                                                      ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è\t     THE PHONEBOOK ACCEPTS ONLY THESE 3 COMMANDS     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è\t     WITHOUT WHITESPACES BEFORE OR AFTER COMMAND     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è1. üá¶ üá© üá©  : Save a new contact\t\t\t     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è2. üá∏ üá™ üá¶ üá∑ üá® üá≠  : Display a specific contact\t     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è3. üá™ üáΩ üáÆ üáπ  : Quit and the contacts are lost forever  ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è\t\t\t\t\t\t\t     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è\t\t‚ùóÔ∏è‚ùóÔ∏èTHE RULES OF DEYAN'S PHONEBOOK‚ùóÔ∏è‚ùóÔ∏è\t     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è1. First and Last Name contain only letters\t     ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è2. Phone numbers contain only digits, plus or minus   ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è3. Nickname and darkest secret can contain everything ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è4. The Phonebook can store a maximum of 8 contacts    ‚≠êÔ∏è" << std::endl;
    std::cout << "\t     ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" << std::endl;
    return;
}
PhoneBook::~PhoneBook()
{
    return ;
}
void    PhoneBook::StartPhoneBook()
{
    _count = 0;
    
    while (1)
    {
        std::cout << "Please enter a command (üá¶ üá© üá© , üá∏ üá™ üá¶ üá∑ üá® üá≠ , üá™ üáΩ üáÆ üáπ )" << std::endl;
        if (!std::getline(std::cin, _input))
        {
            if (std::cin.eof())
                exit(0);
        }
        if (_input == "ADD")
            AddContact();
        else if (_input == "SEARCH")
        {
            if (!SearchPhoneBook())
                continue ;
            SearchByIndex();
        }
        else if (_input == "EXIT")
        {
            std::cout << "\t\tüëã ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è GOODBYE, SEE YOU SOON ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è üëã\t\t" << std::endl;
            return ;
        }
        else
        {
            std::cout << "üìõThe command is not validüìõ" << std::endl;
            continue ;
        }
    }
}
void    PhoneBook::AddContact()
{
    static int n = 0;
    int i = 0;
    
    i = n % 8;
    _contacts[i].SetIndex(i);
    _contacts[i].AddFirstName();
    _contacts[i].AddLastName();
    _contacts[i].AddNickName();
    _contacts[i].AddPhoneNumber();
    _contacts[i].AddDarkestSecret();
    std::cout << "‚úÖContact has been added successfully‚úÖ" << std::endl;
   
    n++;
    if (_count < 8)
        _count++;
}
int    PhoneBook::SearchPhoneBook()
{
    if (!_count)
    {
        std::cout << "üö´The Phonebook is empty, try another commandüö´" << std::endl;
        return (0);
    }
    ShowPhoneBook();
    return (1);
}
void    PhoneBook::ShowPhoneBook()
{
    int i = 0;
    std::string temp;
    
    std::cout << "*********************************************" << std::endl;
    std::cout << "*  index   first name  last name   nickname *" << std::endl;
    std::cout << "*********************************************" << std::endl;
    while (i < _count)
    {
        std::cout << "|" << std::setw(10) << _contacts[i].GetIndex();
        if (_contacts[i].GetFirstName().length() > 10)
        {
            temp = _contacts[i].GetFirstName();
            temp.resize(10);
            temp[9] = '.';
            std::cout << "|" << std::setw(10) << temp;
        }
        else
            std::cout << "|" << std::setw(10) << _contacts[i].GetFirstName();
        if (_contacts[i].GetLastName().length() > 10)
        {
            temp = _contacts[i].GetLastName();
            temp.resize(10);
            temp[9] = '.';
            std::cout << "|" << std::setw(10) << temp;
        }
        else
            std::cout << "|" << std::setw(10) << _contacts[i].GetLastName();
        if (_contacts[i].GetNickName().length() > 10)
        {
            temp = _contacts[i].GetNickName();
            temp.resize(10);
            temp[9] = '.';
            std::cout << "|" << std::setw(10) << temp << "|" << std::endl;
        }
        else
            std::cout << "|" << std::setw(10) << _contacts[i].GetNickName() << "|" << std::endl;
        i++;
    }
    std::cout << "*********************************************" << std::endl;
}
    
void    PhoneBook::SearchByIndex()
{
    int index = 0;

    while (1)
    {
        std::cout << "Please enter an index 0,1,2,3,4,5,6 or 7 for full info ‚Ü©Ô∏è" << std::endl;
        if (!std::getline(std::cin, _input))
        {
            if (std::cin.eof())
                exit(0);
        }
        if (_input[0] < '0' || _input[0] > '7')
        {
            std::cout << "üìõTry again with a numberüìõ" << std::endl;
            continue ;
        }
        index = std::atoi(_input.c_str());
        if (index < 0 || index > 7 || _contacts[index].GetFirstName() == "")
        {
            std::cout << "üìõInvalid index. Please try againüìõ" << std::endl;
            continue;
        }
        else
        {
            std::cout << "FIRST NAME ->üëî" << _contacts[index].GetFirstName() << "üëî" << std::endl;
            std::cout << "LAST NAME ->üëî" << _contacts[index].GetLastName() << "üëî" << std::endl;
            std::cout << "NICKNAME ->ü§©" << _contacts[index].GetNickName() << "ü§©" << std::endl;
            std::cout << "PHONE NUMBER ->üì±" << _contacts[index].GetPhoneNumber() << "üì±" << std::endl;
            std::cout << "DARKEST SECRET ->üïµÔ∏è " << _contacts[index].GetDarkestSercret() << "üïµÔ∏è" << std::endl;
            break ;
        }
    }
}
